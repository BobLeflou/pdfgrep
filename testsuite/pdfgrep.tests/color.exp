set test "Print error if the argument for --color is invalid"

pdfgrep --color=INVALID -r pattern

# The error message should contain the wrong argument and the expected ones
expect {
    -re "^pdfgrep: .*((INVALID|auto|never|always).*){4}.*$" { ppass $test }
    default { pfail $test }
}

expect_exit_status 2


######################################################################

set test "GREP_COLORS default values"

clear_pdfdir
set pdf [mkpdf pdf {one two three}]

set env(GREP_COLORS) ""

set fn "\33\\\[35m\33\\\[K"
set ln "\33\\\[32m\33\\\[K"
set se "\33\\\[36m\33\\\[K"
set ms "\33\\\[01;31m\33\\\[K"
set end "\33\\\[m\33\\\[K"

pdfgrep_expect --color=always --with-filename --page-number two $pdf \
    "$fn$pdf$end$se:$end[set ln]1$end$se:[set end]one [set ms]two$end three"

######################################################################

set test "GREP_COLORS with custom values"

clear_pdfdir
set pdf [mkpdf pdf {one two three}]

set env(GREP_COLORS) "fn=32:ln=36:se=35:ms=01;34"

set fn "\33\\\[32m\33\\\[K"
set ln "\33\\\[36m\33\\\[K"
set se "\33\\\[35m\33\\\[K"
set ms "\33\\\[01;34m\33\\\[K"
set end "\33\\\[m\33\\\[K"

pdfgrep_expect --color=always --with-filename --page-number two $pdf \
    "$fn$pdf$end$se:$end[set ln]1$end$se:[set end]one [set ms]two$end three"
